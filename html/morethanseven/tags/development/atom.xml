<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: development | Morethanseven]]></title>
  <link href="http://www.morethanseven.net/tags/development/atom.xml" rel="self"/>
  <link href="http://www.morethanseven.net/"/>
  <updated>2014-07-20T21:07:19+01:00</updated>
  <id>http://www.morethanseven.net/</id>
  <author>
    <name><![CDATA[Gareth Rushgrove]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Web developers and Tools Programmers]]></title>
    <link href="http://www.morethanseven.net/2008/12/21/web-developers-and-tools-programmers/"/>
    <updated>2008-12-21T00:00:00+00:00</updated>
    <id>http://www.morethanseven.net/2008/12/21/web-developers-and-tools-programmers</id>
    <content type="html"><![CDATA[<p>I'm pretty interested in computer games. Building them represented a big technical challenge and with that comes interesting parallels with larger web projects. Andy Budd has talked about "User Experience learnings":http://www.andybudd.com/archives/2007/10/designing_the_u/ from games previously, and I've heard "Aleks Krotoski":http://www.guardian.co.uk/profile/alekskrotoski talk about similar themes, in particular the design of social systems and user generated content. What I'm interested in however is <em>tools programmers</em>.</p>

<p>Computer game development teams generally have a decent number of people solely dedicated to building and maintaining tools. They aren't working on a specific title, or just on maintaining existing systems, but on programming tools for other developers in the company. Now I'm not sure how much sharing of these tools goes on between the different computer games developers, but from a cursory look around I couldn't find any examples.</p>

<p>Tools programming in web development teams seems to be a different kettle of fish. I've <em>never</em> seen a job position advertised specifically for tools work, nor do I know anyone who would describe themselves as such.  I am however seeing more and more of these sorts of tools make their way out into the world recently thanks to "GitHub":http://github.com. Build systems and scripts, documentation systems, testing harnesses, linting tools, etc. All can be found if you look closely. So it's definitely not that we don't build these tools, though it might be that we don't do it as part of the 9 to 5.</p>

<p>One of the differences that might cause this difference between games developers and web developers is scale. For the most part games development teams are bigger than your average web team or agency development team. But not always and as I said I've <em>never, not once</em> seen a web tools job going. The other reason might be Open Source. Speaking from the web side of the fence their are lots of great open source tools for building web sites and applications. If your needs are pretty basic you should be able to get away with stringing some of these together, but you'll probably still need to do the scripting to do so. Maybe this is the same for games development; I'm afraid I don't know.</p>

<p>Maybe the other reason is that as web developers we all also do a little bit of tools programming? From personal experience this is certainly true, but then I like and think about this sort of stuff more than most anyway.</p>

<p>So a few questions for anyone also interested in this sort of thing:</p>

<ul>
<li>Do you or your colleagues do any tools development at work?</li>
<li>Is that work just done as <em>part</em> of other work or is it defined separately?</li>
<li>If you don't do any tools work per se do you string available tools together using basic scripting?</li>
<li>Or do you just stick with as few tools as possible in order to make live easier?</li>
</ul>


<p>I also have a feeling some communities are happier knocking out little tools than others. The Ruby community in particular seems busy at the moment and their is a great deal of good stuff in Java.</p>

<p>One last thought. How do you go about finding new tools that might work nicely in a web development world? I read far too much of the internet on a daily basis and I still miss interesting stuff more often than not. I only came across "Integrity":http://github.com/foca/integrity/tree/master yesterday for instance.</p>
]]></content>
  </entry>
  
</feed>
