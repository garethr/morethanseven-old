<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: integrity | Morethanseven]]></title>
  <link href="http://www.morethanseven.net/tags/integrity/atom.xml" rel="self"/>
  <link href="http://www.morethanseven.net/"/>
  <updated>2014-02-05T17:24:35+00:00</updated>
  <id>http://www.morethanseven.net/</id>
  <author>
    <name><![CDATA[Gareth Rushgrove]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Pre Recieve Hook For Integrity]]></title>
    <link href="http://www.morethanseven.net/2010/07/11/Git-pre-recieve-hook-for-integrity/"/>
    <updated>2010-07-11T00:00:00+01:00</updated>
    <id>http://www.morethanseven.net/2010/07/11/Git-pre-recieve-hook-for-integrity</id>
    <content type="html"><![CDATA[<p>I'm getting married rather soon so time has been somewhat short (in a good way) for just hacking on stuff, but I've finally found a little bit of time to play with something I've been mulling over for a while. Namely a continuous deployment workflow using the integrity continous integration server.</p>

<p>I'm hoping to have an incredibly simple but fully operation example available at some point - mainly to act as a good discussion point. For now here's my current pre-receive hook.</p>

<script src="http://gist.github.com/471711.js?file=pre-receive"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Local Continuous Integration with Integrity]]></title>
    <link href="http://www.morethanseven.net/2008/12/28/local-continuous-integration-integrity/"/>
    <updated>2008-12-28T00:00:00+00:00</updated>
    <id>http://www.morethanseven.net/2008/12/28/local-continuous-integration-integrity</id>
    <content type="html"><![CDATA[<p>"Integrity":http://integrityapp.com/ is ace. I'm a huge fan of working under the ever watchful eye of a "Continuous Integration":http://en.wikipedia.org/wiki/Continuous_integration server. I'm also becoming more and more of a fan of Git, and "GitHub":http://github.com, for my "personal projects":http://github.com/garethr. At work we run "CruiseControl":http://cruisecontrol.sourceforge.net/ and it does it's job well, but locally I only use it for larger projects. It comes with a little overhead and if I'm just hacking on the train I rarely check on it's status.</p>

<p>Integrity is an unashamedly lightweight and straightforward continuous integration server written in Ruby. It comes with Git integration as well as a nifty notifications framework. There are already notification plugins available for jabber, IRC and email. If I get time and inclination I'd love to hack together a webhooks plugin too. It's a simple app to get up and running with and you can always "browse the code":http://github.com/foca/integrity/tree/master if something isn't clear. All in all it's perfect for my type of smaller project.</p>

<p>So, with a local <em>CI</em> server up and running you're left with one problem; having to click the _Manual Build" button whenever you want a build. Now Integrity comes with a mechanism to allow pushes to GitHub to trigger a build. But this only works when you have an internet connection and are using GitHub and are pushing frequently. Personally I often make lots of local commits and then push at a later date. Also not all of my projects are on GitHub for various reasons.</p>

<p>Well it turns out that all the build button does is sent an empty HTTPpost request to a URL of the following format:</p>

<pre>http://{integrity-url}:8910/{project-name}/builds</pre>


<p>That means with a little bit of Git magic we can have our integration server run a new build whenever we commit our code. All we need to do is write a very simple post-commit git hook script. I've written the script in Python but you could write it in anything. This script is from a real project so adjust the server address and path as needed.</p>

<pre>#! /usr/bin/env python
import httplib
conn = httplib.HTTPConnection("localhost:8910")
conn.request("POST", "/appengine-books/builds")</pre>


<p>All you need to do is drop this script in your .git/hooks folder as <em>post-commit</em>. Make sure you set the executable bit with <em>chmod +x</em> as well, otherwise you'll be wondering why it's not working and probably blaming me.</p>
]]></content>
  </entry>
  
</feed>
