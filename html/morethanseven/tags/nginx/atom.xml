<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nginx | Morethanseven]]></title>
  <link href="http://www.morethanseven.net/tags/nginx/atom.xml" rel="self"/>
  <link href="http://www.morethanseven.net/"/>
  <updated>2014-01-02T18:08:37+00:00</updated>
  <id>http://www.morethanseven.net/</id>
  <author>
    <name><![CDATA[Gareth Rushgrove]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Static Sites With Nginx On Heroku]]></title>
    <link href="http://www.morethanseven.net/2012/06/05/Static-sites-with-nginx-on-heroku/"/>
    <updated>2012-06-05T00:00:00+01:00</updated>
    <id>http://www.morethanseven.net/2012/06/05/Static-sites-with-nginx-on-heroku</id>
    <content type="html"><![CDATA[<p>I have a few static sites on Heroku but in one case in particular I already had quite an involved nginx configuration - mainly 410s for some previous content and a series of redirects from older versions of the site. The common way of having static sites on Heroku appears to be to use a simple Rack middleware, but that would have meant reimplementing lots of boring redirect logic.</p>

<p>Heroku "buildpacks":https://devcenter.heroku.com/articles/buildpacks are great. The newer cedar stack is no longer tied to a particular language or framework, instead all of the discovery and knowledge about particular software is put into a buildpack. As well as the Heroku provided list it's possible to write you're own. Or in this case use one someone has "created earlier":https://github.com/essh/heroku-buildpack-nginx.</p>

<p>I've just moved "Vagrantbox.es":http://www.vagrantbox.es/ over to Heroku due to the closure of a previous service. In doing that, instead of the simple database backed app, I've simply thrown all the content onto "GitHub":https://github.com/garethr/vagrantboxes-heroku. This means anyone can fork the content and send pull requests. Hopefully this should mean I pay a bit more attention to suggestions and new boxes.</p>

<p>The repository is a nice simple example of using the mentioned Heroku Nginx buildpack too. You just run the following command to create a new Heroku application.</p>

<pre>heroku create --stack cedar --buildpack http://github.com/essh/heroku-buildpack-nginx.git</pre>


<p>And then in typical Heroku fashion use a git remote to deploy changes and updates. The repository is split into a <em>www</em> folder with the site content and a <em>conf</em> folder with the nginx configuration. The only clever parts involve the use of an ERB template for the nginx configuration file so we can pickup the correct port. We also use 1 worker process and don't automatically daemonize the process - Heroku deals with this itself.</p>
]]></content>
  </entry>
  
</feed>
