<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Morethanseven]]></title>
  <link href="http://www.morethanseven.net/tags/tools/atom.xml" rel="self"/>
  <link href="http://www.morethanseven.net/"/>
  <updated>2014-02-05T17:29:23+00:00</updated>
  <id>http://www.morethanseven.net/</id>
  <author>
    <name><![CDATA[Gareth Rushgrove]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[You're Going To Need A Bigger Toolbox]]></title>
    <link href="http://www.morethanseven.net/2010/04/29/Youre-going-to-need-a-bigger-toolbox/"/>
    <updated>2010-04-29T00:00:00+01:00</updated>
    <id>http://www.morethanseven.net/2010/04/29/Youre-going-to-need-a-bigger-toolbox</id>
    <content type="html"><![CDATA[<p>I'm just getting back from Newcastle after getting to present at the first Design It Build It conference. It was great to be back up in Newcastle and to see lots of familiar faces. As with most conferences it was also good to meet new people (especially those for whom it was their first conference) and to listen to people talking about interesting stuff. Personal highlights for me were David Singleton from Last.fm and Michael Brunton Spall from The Guardian going through really interesting case studies from their respective organisations. It's the sort of gritty content it's often hard to come by. Speaking did mean I missed out on most of the design track unfrotunately, but videos should be available soon and by all accounts it sounds like the larger designer crowd went home happy.</p>

<object id="__sse3884141" width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=biggertoolbox-100428092640-phpapp02&stripped_title=youre-going-to-need-a-bigger-toolbox" /><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed name="__sse3884141" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=biggertoolbox-100428092640-phpapp02&stripped_title=youre-going-to-need-a-bigger-toolbox" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object>


<p>I think my presentation at "DIBI":http://dibiconference.co.uk went OK. I'd got a little bit carried away with cramming content in, which meant it felt rushed at times and I still went over by 5 minutes into my Q&amp;A time. But hey, a few people said nice things afterwards.</p>

<p>I wanted to tell the world (of web developers) about as many different tools as I could. I think most people who read this blog have probably come across most of this software, heck you might be commiting code to it or already using it in production. But lots of people haven't ever heard of Memcached, never mind Cassandra or RabbitMQ. And more inportant than the specific software is the differnt types of tools available. Small web servers, message queues, HTTP caches, etc. Conferences are a good place to find and educate people. Hopefully I managed to do just that.</p>

<p>One thing I hope I got across, I'm not for a moment saying you shouldn't be using tools you know and love. Nor am I saying you should jump in and start using lots of crazy software. But keeping an eye on new developments can serve you well when it comes to deciding whether the best approach is really to build something from scratch. I've spoken to several people over the last few weeks who where starting to write simple queing systems using cron and mysql, or using a hand rolled file system based caching setup. And in both cases I think they would be better served by existing tools.</p>

<p>My slides had <em>a lot</em> of links in them and I mentioned during my talk I'm put a list of them somewhere:</p>

<p>h2. Small Web Servers</p>

<ul>
<li>Nginx - "http://wiki.nginx.org":http://wiki.nginx.org</li>
<li>Thin - "http://code.macournoyer.com/thin/":http://code.macournoyer.com/thin/</li>
<li>Mongrel - "http://github.com/fauna/mongrel/":http://github.com/fauna/mongrel/</li>
<li>Spawning - "http://pypi.python.org/pypi/Spawning/":http://pypi.python.org/pypi/Spawning/</li>
<li>Unicorn - "http://github.com/defunkt/unicorn/":http://github.com/defunkt/unicorn/</li>
</ul>


<p>h2. Caching</p>

<ul>
<li>Memcached - "http://memcached.org":http://memcached.org</li>
<li>Squid - "http://www.squid-cache.org":http://www.squid-cache.org</li>
<li>Varnish - "http://varnish-cache.org":http://varnish-cache.org</li>
</ul>


<p>h2. Search Engines</p>

<ul>
<li>Solr - "http://lucene.apache.org/solr/":http://lucene.apache.org/solr/</li>
<li>Xapian - "http://xapian.org":http://xapian.org</li>
<li>Sphinx - "http://sphinxsearch.com":http://sphinxsearch.com</li>
<li>Nutch - "http://lucene.apache.org/nutch/":http://lucene.apache.org/nutch/</li>
<li>Whoosh - "http://whoosh.ca":http://whoosh.ca</li>
</ul>


<p>h2. Message Queues</p>

<ul>
<li>RabbitMQ - "http://rabbitmq.com":http://rabbitmq.com</li>
<li>Apache ActiveMQ - "http://activemq.apache.org":http://activemq.apache.org</li>
<li>Beanstalk - "http://kr.github.com/beanstalkd/":http://kr.github.com/beanstalkd/</li>
<li>Stomp Server - "http://stomp.codehaus.org":http://stomp.codehaus.org</li>
<li>MemcacheQ - "http://memcachedb.org/memcacheq/":http://memcachedb.org/memcacheq/</li>
</ul>


<p>h2. Non-relational Data Stores</p>

<ul>
<li>CouchDB - "http://couchdb.apache.org":http://couchdb.apache.org</li>
<li>MongoDB - "http://www.mongodb.org":http://www.mongodb.org</li>
<li>Tokyo Tyrant - "http://1978th.net/tokyotyrant/":http://1978th.net/tokyotyrant/</li>
<li>Cassandra - "http://cassandra.apache.org":http://cassandra.apache.org</li>
<li>Redis - "http://code.google.com/p/redis/":http://code.google.com/p/redis/</li>
</ul>


<p>h2. Data Mining</p>

<ul>
<li>Hadoop - "http://hadoop.apache.org":http://hadoop.apache.org</li>
<li>Hive - "http://wiki.apache.org/hadoop/Hive/":http://wiki.apache.org/hadoop/Hive/</li>
<li>Pig - "http://hadoop.apache.org/pig/":http://hadoop.apache.org/pig/</li>
<li>Dumbo - "http://lastfm.com/dumbo/":http://lastfm.com/dumbo/</li>
<li>Disco - "http://discoproject.org":http://discoproject.org</li>
</ul>


<p>h2. Functional Testing</p>

<ul>
<li>Cucumber - "http://cukes.info":http://cukes.info</li>
<li>Cucumber-Nagios - "http://auxesis.github.com/cucumber-nagios/":http://auxesis.github.com/cucumber-nagios/</li>
</ul>


<p>h2. Server Provisioning</p>

<ul>
<li>Puppet - "http://puppetlabs.com":http://puppetlabs.com</li>
<li>Chef - "http://wiki.opscode.com/display/chef/Home/":http://wiki.opscode.com/display/chef/Home/</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beyond Basic Web Development]]></title>
    <link href="http://www.morethanseven.net/2009/05/25/beyond-basic-web-development/"/>
    <updated>2009-05-25T00:00:00+01:00</updated>
    <id>http://www.morethanseven.net/2009/05/25/beyond-basic-web-development</id>
    <content type="html"><![CDATA[<p>I did a talk at the recent barcamp North East on web development tools. Specifically I wanted to talk about the fact that an awful lot of people just use the basic stack of tools they are familiar with. So Microsoft people will just use C#, MSSQL and ISS and lots of people just use PHP, MySQL and Apache. I'm not saying their is anything wrong with those tools, but if they are all you have in your tool box you're limited how well designed your software can be.</p>

<object style="margin:0px" width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=beyondbasicwebdev-090525052654-phpapp02&stripped_title=beyond-basic-web-development" /><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=beyondbasicwebdev-090525052654-phpapp02&stripped_title=beyond-basic-web-development" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object>


<p>I'd knocked the presentation together in my hotel room pretty quickly before heading down to barcamp and the lack of an internet connection meant I didn't have links and didn't cover a few tools I should have. It did seem to have the desired result in any case as several people spoke to me afterwards about wanting to use one of the tools I mentioned for something specific.</p>

<ul>
<li>"Memcached":http://www.danga.com/memcached/</li>
<li>Non relational databases ("Hbase":http://hadoop.apache.org/hbase/, "Couchdb":http://couchdb.apache.org/)</li>
<li>"Tokyo Tyrant":http://tokyocabinet.sourceforge.net/tyrantdoc/</li>
<li>"Apache Bench":http://httpd.apache.org/docs/2.0/programs/ab.html</li>
<li>"Continuous Integration":http://integrityapp.com/</li>
<li>"Django":http://djangoproject.com/ (specifically for nearly free admin interfaces)</li>
<li>Small web servers - "Nginx":http://nginx.net/, "Thin":http://code.macournoyer.com/thin/ and "Spawning":http://pypi.python.org/pypi/Spawning/0.7</li>
<li>Message queues - "RabbitMQ":http://www.rabbitmq.com/ and "Stompserver":http://stompserver.rubyforge.org/</li>
<li>HTTP tools - "Pound":http://www.apsis.ch/pound/, "Varnish":http://varnish.projects.linpro.no/ and "Squid":http://www.squid-cache.org/</li>
<li>"Hadoop":http://hadoop.apache.org/core/</li>
</ul>


<p>We also had a good discussion afterwards and people mentioned a few other tools.</p>

<ul>
<li>"Puppet":http://reductivelabs.com/products/puppet/</li>
<li>"Nagios":http://www.nagios.org/</li>
<li>"Ganglia":http://ganglia.info/</li>
<li>"Jetty":http://www.mortbay.org/jetty/</li>
<li>"Solr":http://lucene.apache.org/solr/</li>
</ul>


<p>Now it's possible to spend too much time playing with small tools that are likely to be peripheral to the bulk of your application. But the number of stories I've head of people writing their own messages queuing systems in PHP, or using PHPMyAdmin as an application admin interface or ignoring the fact that their fancy new application only supports a few people at once.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web developers and Tools Programmers]]></title>
    <link href="http://www.morethanseven.net/2008/12/21/web-developers-and-tools-programmers/"/>
    <updated>2008-12-21T00:00:00+00:00</updated>
    <id>http://www.morethanseven.net/2008/12/21/web-developers-and-tools-programmers</id>
    <content type="html"><![CDATA[<p>I'm pretty interested in computer games. Building them represented a big technical challenge and with that comes interesting parallels with larger web projects. Andy Budd has talked about "User Experience learnings":http://www.andybudd.com/archives/2007/10/designing_the_u/ from games previously, and I've heard "Aleks Krotoski":http://www.guardian.co.uk/profile/alekskrotoski talk about similar themes, in particular the design of social systems and user generated content. What I'm interested in however is <em>tools programmers</em>.</p>

<p>Computer game development teams generally have a decent number of people solely dedicated to building and maintaining tools. They aren't working on a specific title, or just on maintaining existing systems, but on programming tools for other developers in the company. Now I'm not sure how much sharing of these tools goes on between the different computer games developers, but from a cursory look around I couldn't find any examples.</p>

<p>Tools programming in web development teams seems to be a different kettle of fish. I've <em>never</em> seen a job position advertised specifically for tools work, nor do I know anyone who would describe themselves as such.  I am however seeing more and more of these sorts of tools make their way out into the world recently thanks to "GitHub":http://github.com. Build systems and scripts, documentation systems, testing harnesses, linting tools, etc. All can be found if you look closely. So it's definitely not that we don't build these tools, though it might be that we don't do it as part of the 9 to 5.</p>

<p>One of the differences that might cause this difference between games developers and web developers is scale. For the most part games development teams are bigger than your average web team or agency development team. But not always and as I said I've <em>never, not once</em> seen a web tools job going. The other reason might be Open Source. Speaking from the web side of the fence their are lots of great open source tools for building web sites and applications. If your needs are pretty basic you should be able to get away with stringing some of these together, but you'll probably still need to do the scripting to do so. Maybe this is the same for games development; I'm afraid I don't know.</p>

<p>Maybe the other reason is that as web developers we all also do a little bit of tools programming? From personal experience this is certainly true, but then I like and think about this sort of stuff more than most anyway.</p>

<p>So a few questions for anyone also interested in this sort of thing:</p>

<ul>
<li>Do you or your colleagues do any tools development at work?</li>
<li>Is that work just done as <em>part</em> of other work or is it defined separately?</li>
<li>If you don't do any tools work per se do you string available tools together using basic scripting?</li>
<li>Or do you just stick with as few tools as possible in order to make live easier?</li>
</ul>


<p>I also have a feeling some communities are happier knocking out little tools than others. The Ruby community in particular seems busy at the moment and their is a great deal of good stuff in Java.</p>

<p>One last thought. How do you go about finding new tools that might work nicely in a web development world? I read far too much of the internet on a daily basis and I still miss interesting stuff more often than not. I only came across "Integrity":http://github.com/foca/integrity/tree/master yesterday for instance.</p>
]]></content>
  </entry>
  
</feed>
